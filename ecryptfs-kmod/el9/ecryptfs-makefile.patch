--- a/Makefile	2022-04-14 08:51:12.000000000 -0700
+++ b/Makefile	2022-05-20 16:25:55.840007332 -0700
@@ -3,9 +3,44 @@
 # Makefile for the Linux eCryptfs
 #
 
-obj-$(CONFIG_ECRYPT_FS) += ecryptfs.o
+# If KERNELRELEASE is defined, the make command using this Makefile has
+# been invoked by the kernel build system and so can use its language.
+# Otherwise, if KERNELRELEASE is null, a make command was issued from
+# the command line. So invoke the kernel build system.
+
+ifeq ($(KERNELRELEASE),)
+
+    # KVERSION should be set in the environment if this
+    # build is not for the currently running kernel.
+    KVERSION ?= $(shell uname -r)
+
+    # BUILD_DIR should be set in the environment if a
+    # subdirectory of /lib/modules/ is not appropriate.
+    BUILD_DIR ?= /lib/modules/${KVERSION}/build
+
+    PWD := $(shell pwd)
+
+modules:
+	$(MAKE) -C $(BUILD_DIR) M=$(PWD) modules
+
+modules_install:
+	$(MAKE) -C $(BUILD_DIR) M=$(PWD) modules_install
+
+clean:
+	rm -rf *~ *.o .*.cmd *.mod.c *.ko *.ko.unsigned .depend \
+	.tmp_versions modules.order Module.symvers Module.markers
+
+.PHONY: modules modules_install clean
+
+else
+
+# Called from kernel build system -- just declare the module(s).
+
+obj-m += ecryptfs.o
 
 ecryptfs-y := dentry.o file.o inode.o main.o super.o mmap.o read_write.o \
 	      crypto.o keystore.o kthread.o debug.o
 
-ecryptfs-$(CONFIG_ECRYPT_FS_MESSAGING) += messaging.o miscdev.o
+# ecryptfs-y += messaging.o miscdev.o
+
+endif
