diff -aurp r8168-8.055.00.orig/src/r8168.h r8168-8.055.00/src/r8168.h
--- r8168-8.055.00.orig/src/r8168.h	2025-01-15 09:24:13.000000000 -0500
+++ r8168-8.055.00/src/r8168.h	2025-02-26 00:13:44.008044915 -0500
@@ -423,7 +423,7 @@ do { \
 #define  MDIO_EEE_1000T  0x0004
 #endif
 
-#if LINUX_VERSION_CODE < KERNEL_VERSION(6,9,0)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6,9,0) && RHEL_MAJOR != 9
 #define ethtool_keee ethtool_eee
 #define rtl8168_ethtool_adv_to_mmd_eee_adv_cap1_t ethtool_adv_to_mmd_eee_adv_t
 #else
@@ -751,7 +751,7 @@ typedef int *napi_budget;
 typedef struct napi_struct *napi_ptr;
 typedef int napi_budget;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0) || RHEL_MAJOR == 9
 #define RTL_NAPI_CONFIG(ndev, priv, function, weight)   netif_napi_add_weight(ndev, &priv->napi, function, weight)
 #else
 #define RTL_NAPI_CONFIG(ndev, priv, function, weight)   netif_napi_add(ndev, &priv->napi, function, weight)
diff -aurp r8168-8.055.00.orig/src/r8168_n.c r8168-8.055.00/src/r8168_n.c
--- r8168-8.055.00.orig/src/r8168_n.c	2025-01-15 09:24:13.000000000 -0500
+++ r8168-8.055.00/src/r8168_n.c	2025-02-26 00:23:21.305986552 -0500
@@ -2655,7 +2655,7 @@ static void rtl8168_proc_module_init(voi
 static int rtl8168_proc_open(struct inode *inode, struct file *file)
 {
         struct net_device *dev = proc_get_parent_data(inode);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,17,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,17,0) || RHEL_MAJOR == 9
         int (*show)(struct seq_file *, void *) = pde_data(inode);
 #else
         int (*show)(struct seq_file *, void *) = PDE_DATA(inode);
@@ -7256,7 +7256,7 @@ rtl8168_set_ring_size(struct rtl8168_pri
 }
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,17,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,17,0) || RHEL_MAJOR == 9
 static void rtl8168_get_ringparam(struct net_device *dev,
                                   struct ethtool_ringparam *ring,
                                   struct kernel_ethtool_ringparam *kernel_ring,
@@ -7274,7 +7274,7 @@ static void rtl8168_get_ringparam(struct
         ring->tx_pending = tp->tx_ring[0].num_tx_desc;
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,17,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,17,0) || RHEL_MAJOR == 9
 static int rtl8168_set_ringparam(struct net_device *dev,
                                  struct ethtool_ringparam *ring,
                                  struct kernel_ethtool_ringparam *kernel_ring,
@@ -7981,7 +7981,7 @@ rtl8168_device_lpi_t_to_ethtool_lpi_t(st
         return to_us;
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,9,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,9,0) || RHEL_MAJOR == 9
 static void
 rtl8168_adv_to_linkmode(unsigned long *mode, u64 adv)
 {
@@ -26835,7 +26835,7 @@ err1:
                 struct ethtool_keee *eee = &tp->eee;
 
                 eee->eee_enabled = eee_enable;
-#if LINUX_VERSION_CODE < KERNEL_VERSION(6,9,0)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6,9,0) && RHEL_MAJOR != 9
                 eee->supported  = SUPPORTED_100baseT_Full |
                                   SUPPORTED_1000baseT_Full;
                 eee->advertised = mmd_eee_adv_to_ethtool_adv_t(MDIO_EEE_1000T | MDIO_EEE_100TX);
@@ -28716,7 +28716,7 @@ rtl8168_init_one(struct pci_dev *pdev,
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,22)
                 if ((tp->mcfg == CFG_METHOD_1) || (tp->mcfg == CFG_METHOD_2) || (tp->mcfg == CFG_METHOD_3)) {
                         dev->hw_features &= ~NETIF_F_IPV6_CSUM;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,19,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,19,0) || RHEL_MAJOR == 9
                         netif_set_tso_max_size(dev, LSO_64K);
                         netif_set_tso_max_segs(dev, NIC_MAX_PHYS_BUF_COUNT_LSO2);
 #else //LINUX_VERSION_CODE >= KERNEL_VERSION(5,19,0)
@@ -28742,7 +28742,7 @@ rtl8168_init_one(struct pci_dev *pdev,
                                         break;
                                 };
                         }
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,19,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,19,0) || RHEL_MAJOR == 9
                         netif_set_tso_max_size(dev, LSO_64K);
                         netif_set_tso_max_segs(dev, NIC_MAX_PHYS_BUF_COUNT_LSO2);
 #else //LINUX_VERSION_CODE >= KERNEL_VERSION(5,19,0)
diff -aurp r8168-8.055.00.orig/src/r8168_rss.c r8168-8.055.00/src/r8168_rss.c
--- r8168-8.055.00.orig/src/r8168_rss.c	2025-01-15 09:24:13.000000000 -0500
+++ r8168-8.055.00/src/r8168_rss.c	2025-02-26 00:18:39.292825420 -0500
@@ -298,7 +298,7 @@ static void rtl8168_store_rss_key(struct
                 rtl8168_eri_write(tp, rss_key_reg + i, 4, *rss_key++, ERIAR_ExGMAC);
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,8,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,8,0) || RHEL_MAJOR == 9
 int rtl8168_get_rxfh(struct net_device *dev, struct ethtool_rxfh_param *rxfh)
 {
         struct rtl8168_private *tp = netdev_priv(dev);
diff -aurp r8168-8.055.00.orig/src/r8168_rss.h r8168-8.055.00/src/r8168_rss.h
--- r8168-8.055.00.orig/src/r8168_rss.h	2025-01-15 08:53:15.000000000 -0500
+++ r8168-8.055.00/src/r8168_rss.h	2025-02-26 00:18:51.147378654 -0500
@@ -50,7 +50,7 @@ int rtl8168_get_rxnfc(struct net_device
 int rtl8168_set_rxnfc(struct net_device *dev, struct ethtool_rxnfc *cmd);
 u32 rtl8168_get_rxfh_key_size(struct net_device *netdev);
 u32 rtl8168_rss_indir_size(struct net_device *netdev);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,8,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,8,0) || RHEL_MAJOR == 9
 int rtl8168_get_rxfh(struct net_device *dev, struct ethtool_rxfh_param *rxfh);
 int rtl8168_set_rxfh(struct net_device *dev, struct ethtool_rxfh_param *rxfh,
                      struct netlink_ext_ack *extack);
