diff -Naurp r8125-9.015.00.orig/src/r8125.h r8125-9.015.00/src/r8125.h
--- r8125-9.015.00.orig/src/r8125.h	2025-05-16 18:55:58.379612318 -0400
+++ r8125-9.015.00/src/r8125.h	2025-05-16 18:59:03.653343977 -0400
@@ -37,6 +37,7 @@
 
 //#include <linux/pci.h>
 #include <linux/ethtool.h>
+#include <linux/mdio.h>
 #include <linux/interrupt.h>
 #include <linux/version.h>
 #include "r8125_dash.h"
@@ -488,7 +489,7 @@ do { \
 #define  MDIO_EEE_2_5GT  0x0001
 #endif
 
-#if LINUX_VERSION_CODE < KERNEL_VERSION(6,9,0)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6,9,0) && RHEL_MAJOR != 9
 #define ethtool_keee ethtool_eee
 #define rtl8125_ethtool_adv_to_mmd_eee_adv_cap1_t ethtool_adv_to_mmd_eee_adv_t
 static inline u32 rtl8125_ethtool_adv_to_mmd_eee_adv_cap2_t(u32 adv)
@@ -501,6 +502,27 @@ static inline u32 rtl8125_ethtool_adv_to
         return result;
 }
 #else
+#if RHEL_MAJOR == 9 && RHEL_MINOR < 6
+static inline u32 linkmode_to_mii_eee_cap2_t(unsigned long *adv)
+{
+	u32 result = 0;
+
+	if (linkmode_test_bit(ETHTOOL_LINK_MODE_2500baseT_Full_BIT, adv))
+		result |= MDIO_EEE_2_5GT;
+	if (linkmode_test_bit(ETHTOOL_LINK_MODE_5000baseT_Full_BIT, adv))
+		result |= MDIO_EEE_5GT;
+
+	return result;
+}
+
+static inline void mii_eee_cap2_mod_linkmode_sup_t(unsigned long *adv, u32 val)
+{
+	linkmode_mod_bit(ETHTOOL_LINK_MODE_2500baseT_Full_BIT,
+			 adv, val & MDIO_EEE_2_5GT);
+	linkmode_mod_bit(ETHTOOL_LINK_MODE_5000baseT_Full_BIT,
+			 adv, val & MDIO_EEE_5GT);
+}
+#endif
 #define rtl8125_ethtool_adv_to_mmd_eee_adv_cap1_t linkmode_to_mii_eee_cap1_t
 #define rtl8125_ethtool_adv_to_mmd_eee_adv_cap2_t linkmode_to_mii_eee_cap2_t
 #endif /* LINUX_VERSION_CODE < KERNEL_VERSION(6,9,0) */
@@ -886,7 +908,7 @@ typedef int *napi_budget;
 typedef struct napi_struct *napi_ptr;
 typedef int napi_budget;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,1,0) || RHEL_MAJOR == 9
 #define RTL_NAPI_CONFIG(ndev, priv, function, weight)   netif_napi_add_weight(ndev, &priv->napi, function, weight)
 #else
 #define RTL_NAPI_CONFIG(ndev, priv, function, weight)   netif_napi_add(ndev, &priv->napi, function, weight)
diff -Naurp r8125-9.015.00.orig/src/r8125_n.c r8125-9.015.00/src/r8125_n.c
--- r8125-9.015.00.orig/src/r8125_n.c	2025-05-16 18:55:58.395612123 -0400
+++ r8125-9.015.00/src/r8125_n.c	2025-05-16 18:59:03.655343953 -0400
@@ -2928,7 +2928,7 @@ static void rtl8125_proc_module_init(voi
 static int rtl8125_proc_open(struct inode *inode, struct file *file)
 {
         struct net_device *dev = proc_get_parent_data(inode);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,17,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,17,0) || RHEL_MAJOR == 9
         int (*show)(struct seq_file *, void *) = pde_data(inode);
 #else
         int (*show)(struct seq_file *, void *) = PDE_DATA(inode);
@@ -6712,7 +6712,7 @@ rtl8125_set_ring_size(struct rtl8125_pri
 }
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,17,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,17,0) || RHEL_MAJOR == 9
 static void rtl8125_get_ringparam(struct net_device *dev,
                                   struct ethtool_ringparam *ring,
                                   struct kernel_ethtool_ringparam *kernel_ring,
@@ -6730,7 +6730,7 @@ static void rtl8125_get_ringparam(struct
         ring->tx_pending = tp->tx_ring[0].num_tx_desc;
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,17,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,17,0) || RHEL_MAJOR == 9
 static int rtl8125_set_ringparam(struct net_device *dev,
                                  struct ethtool_ringparam *ring,
                                  struct kernel_ethtool_ringparam *kernel_ring,
@@ -7185,7 +7185,7 @@ rtl8125_device_lpi_t_to_ethtool_lpi_t(st
         return to_us;
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,9,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,9,0) || RHEL_MAJOR == 9
 static void
 rtl8125_adv_to_linkmode(unsigned long *mode, u64 adv)
 {
@@ -14656,7 +14656,7 @@ rtl8125_init_software_variable(struct ne
                 struct ethtool_keee *eee = &tp->eee;
 
                 eee->eee_enabled = eee_enable;
-#if LINUX_VERSION_CODE < KERNEL_VERSION(6,9,0)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6,9,0) && RHEL_MAJOR != 9
                 eee->supported  = SUPPORTED_100baseT_Full |
                                   SUPPORTED_1000baseT_Full;
                 eee->advertised = mmd_eee_adv_to_ethtool_adv_t(MDIO_EEE_1000T | MDIO_EEE_100TX);
@@ -16650,7 +16650,7 @@ rtl8125_init_one(struct pci_dev *pdev,
                         dev->features |= NETIF_F_TSO6;
                         break;
                 };
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,19,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,19,0) || RHEL_MAJOR == 9
                 netif_set_tso_max_size(dev, LSO_64K);
                 netif_set_tso_max_segs(dev, NIC_MAX_PHYS_BUF_COUNT_LSO2);
 #else //LINUX_VERSION_CODE >= KERNEL_VERSION(5,19,0)
diff -Naurp r8125-9.015.00.orig/src/r8125_ptp.c r8125-9.015.00/src/r8125_ptp.c
--- r8125-9.015.00.orig/src/r8125_ptp.c	2025-05-16 18:55:58.396612111 -0400
+++ r8125-9.015.00/src/r8125_ptp.c	2025-05-16 19:01:04.281867098 -0400
@@ -198,7 +198,7 @@ static int _rtl8125_phc_adjfreq(struct p
         return 0;
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,2,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,2,0) || RHEL_MAJOR == 9
 static int rtl8125_ptp_adjfine(struct ptp_clock_info *ptp, long scaled_ppm)
 {
         s32 ppb = scaled_ppm_to_ppb(scaled_ppm);
@@ -303,8 +303,13 @@ static int rtl8125_phc_enable(struct ptp
         }
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,11,0) || (RHEL_MAJOR == 9 && RHEL_MINOR >= 6)
+int rtl8125_get_ts_info(struct net_device *netdev,
+                        struct kernel_ethtool_ts_info *info)
+#else
 int rtl8125_get_ts_info(struct net_device *netdev,
                         struct ethtool_ts_info *info)
+#endif
 {
         struct rtl8125_private *tp = netdev_priv(netdev);
 
@@ -346,7 +351,7 @@ static const struct ptp_clock_info rtl_p
         .n_per_out  = 0,
         .n_pins     = 0,
         .pps        = 1,
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,2,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,2,0) || RHEL_MAJOR == 9
         .adjfine   = rtl8125_ptp_adjfine,
 #else
         .adjfreq    = rtl8125_phc_adjfreq,
diff -Naurp r8125-9.015.00.orig/src/r8125_ptp.h r8125-9.015.00/src/r8125_ptp.h
--- r8125-9.015.00.orig/src/r8125_ptp.h	2025-01-15 09:36:26.000000000 -0500
+++ r8125-9.015.00/src/r8125_ptp.h	2025-05-16 19:00:29.739290008 -0400
@@ -65,8 +65,13 @@ enum PTP_CMD_TYPE {
 struct rtl8125_private;
 struct RxDescV3;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,11,0) || (RHEL_MAJOR == 9 && RHEL_MINOR >= 6)
+int rtl8125_get_ts_info(struct net_device *netdev,
+                        struct kernel_ethtool_ts_info *info);
+#else
 int rtl8125_get_ts_info(struct net_device *netdev,
                         struct ethtool_ts_info *info);
+#endif
 
 void rtl8125_ptp_reset(struct rtl8125_private *tp);
 void rtl8125_ptp_init(struct rtl8125_private *tp);
diff -Naurp r8125-9.015.00.orig/src/r8125_rss.c r8125-9.015.00/src/r8125_rss.c
--- r8125-9.015.00.orig/src/r8125_rss.c	2025-05-16 18:55:58.396612111 -0400
+++ r8125-9.015.00/src/r8125_rss.c	2025-05-16 18:59:03.656343941 -0400
@@ -354,7 +354,7 @@ static void rtl8125_store_rss_key(struct
                 RTL_W32(tp, rss_key_reg + i, *rss_key++);
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,8,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,8,0) || RHEL_MAJOR == 9
 int rtl8125_get_rxfh(struct net_device *dev, struct ethtool_rxfh_param *rxfh)
 {
         struct rtl8125_private *tp = netdev_priv(dev);
diff -Naurp r8125-9.015.00.orig/src/r8125_rss.h r8125-9.015.00/src/r8125_rss.h
--- r8125-9.015.00.orig/src/r8125_rss.h	2025-05-16 18:55:58.397612099 -0400
+++ r8125-9.015.00/src/r8125_rss.h	2025-05-16 18:59:03.656343941 -0400
@@ -54,7 +54,7 @@ int rtl8125_get_rxnfc(struct net_device
 int rtl8125_set_rxnfc(struct net_device *dev, struct ethtool_rxnfc *cmd);
 u32 rtl8125_get_rxfh_key_size(struct net_device *netdev);
 u32 rtl8125_rss_indir_size(struct net_device *netdev);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,8,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,8,0) || RHEL_MAJOR == 9
 int rtl8125_get_rxfh(struct net_device *dev, struct ethtool_rxfh_param *rxfh);
 int rtl8125_set_rxfh(struct net_device *dev, struct ethtool_rxfh_param *rxfh,
                      struct netlink_ext_ack *extack);
