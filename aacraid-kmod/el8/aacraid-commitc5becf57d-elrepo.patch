diff -uNpr aacraid-1.2.1.orig/aacraid.h aacraid-1.2.1/aacraid.h
--- aacraid-1.2.1.orig/aacraid.h	2024-05-10 09:49:59.000000000 -0700
+++ aacraid-1.2.1/aacraid.h	2024-06-24 17:28:12.895676410 -0700
@@ -1686,7 +1686,6 @@ struct aac_dev
 	u8			adapter_shutdown;
 	u32			handle_pci_error;
 	bool			init_reset;
-	u8			use_map_queue;
 };
 
 #define aac_adapter_interrupt(dev) \
diff -uNpr aacraid-1.2.1.orig/commsup.c aacraid-1.2.1/commsup.c
--- aacraid-1.2.1.orig/commsup.c	2024-05-10 09:49:59.000000000 -0700
+++ aacraid-1.2.1/commsup.c	2024-06-24 17:30:14.581314205 -0700
@@ -237,12 +237,8 @@ int aac_fib_setup(struct aac_dev * dev)
 struct fib *aac_fib_alloc_tag(struct aac_dev *dev, struct scsi_cmnd *scmd)
 {
 	struct fib *fibptr;
-	u32 blk_tag;
-	int i;
 
-	blk_tag = blk_mq_unique_tag(scmd->request);
-	i = blk_mq_unique_tag_to_tag(blk_tag);
-	fibptr = &dev->fibs[i];
+	fibptr = &dev->fibs[scsi_cmd_to_rq(scmd)->tag];
 	/*
 	 *	Null out fields that depend on being zero at the start of
 	 *	each I/O
diff -uNpr aacraid-1.2.1.orig/linit.c aacraid-1.2.1/linit.c
--- aacraid-1.2.1.orig/linit.c	2024-05-10 09:49:59.000000000 -0700
+++ aacraid-1.2.1/linit.c	2024-06-25 02:58:42.413976518 -0700
@@ -32,7 +32,6 @@
 
 #include <linux/compat.h>
 #include <linux/blkdev.h>
-#include <linux/blk-mq-pci.h>
 #include <linux/completion.h>
 #include <linux/init.h>
 #include <linux/interrupt.h>
@@ -583,17 +582,6 @@ common_config:
 	return 0;
 }
 
-static int aac_map_queues(struct Scsi_Host *shost)
-{
-	struct aac_dev *aac = (struct aac_dev *)shost->hostdata;
-
-	blk_mq_pci_map_queues(&shost->tag_set.map[HCTX_TYPE_DEFAULT],
-			      aac->pdev, 0);
-	aac->use_map_queue = true;
-
-	return 0;
-}
-
 /**
  *	aac_change_queue_depth		-	alter queue depths
  *	@sdev:	SCSI device we are considering
@@ -1606,7 +1594,6 @@ static struct scsi_host_template aac_dri
 	.bios_param			= aac_biosparm,
 	.shost_attrs			= aac_attrs,
 	.slave_configure		= aac_slave_configure,
-	.map_queues			= aac_map_queues,
 	.change_queue_depth		= aac_change_queue_depth,
 	.sdev_attrs			= aac_dev_attrs,
 	.eh_abort_handler		= aac_eh_abort,
@@ -1877,8 +1864,6 @@ static int aac_probe_one(struct pci_dev
 	shost->max_lun = AAC_MAX_LUN;
 
 	pci_set_drvdata(pdev, shost);
-	shost->nr_hw_queues = aac->max_msix;
-	shost->host_tagset = 1;
 
 	error = scsi_add_host(shost, &pdev->dev);
 	if (error)
@@ -2029,7 +2014,6 @@ static void aac_remove_one(struct pci_de
 	struct aac_dev *aac = (struct aac_dev *)shost->hostdata;
 
 	aac_cancel_safw_rescan_worker(aac);
-	aac->use_map_queue = false;
 	scsi_remove_host(shost);
 
 	__aac_shutdown(aac);
diff -uNpr aacraid-1.2.1.orig/src.c aacraid-1.2.1/src.c
--- aacraid-1.2.1.orig/src.c	2024-05-10 09:49:59.000000000 -0700
+++ aacraid-1.2.1/src.c	2024-06-24 17:40:49.190187812 -0700
@@ -497,10 +497,6 @@ static int aac_src_deliver_message(struc
 #endif
 
 	u16 vector_no;
-	struct scsi_cmnd *scmd;
-	u32 blk_tag;
-	struct Scsi_Host *shost = dev->scsi_host_ptr;
-	struct blk_mq_queue_map *qmap;
 
 	atomic_inc(&q->numpending);
 
@@ -513,25 +509,8 @@ static int aac_src_deliver_message(struc
 		if ((dev->comm_interface == AAC_COMM_MESSAGE_TYPE3)
 			&& dev->sa_firmware)
 			vector_no = aac_get_vector(dev);
-		else {
-			if (!fib->vector_no || !fib->callback_data) {
-				if (shost && dev->use_map_queue) {
-					qmap = &shost->tag_set.map[HCTX_TYPE_DEFAULT];
-					vector_no = qmap->mq_map[raw_smp_processor_id()];
-				}
-				/*
-				 *	We hardcode the vector_no for
-				 *	reserved commands as a valid shost is
-				 *	absent during the init
-				 */
-				else
-					vector_no = 0;
-			} else {
-				scmd = (struct scsi_cmnd *)fib->callback_data;
-				blk_tag = blk_mq_unique_tag(scmd->request);
-				vector_no = blk_mq_unique_tag_to_hwq(blk_tag);
-			}
-		}
+		else
+			vector_no = fib->vector_no;
 
 		if (native_hba) {
 			if (fib->flags & FIB_CONTEXT_FLAG_NATIVE_HBA_TMF) {
