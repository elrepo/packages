diff -Naurp ath5k-0.0.orig/ath5k/base.c ath5k-0.0/ath5k/base.c
--- ath5k-0.0.orig/ath5k/base.c	2021-05-22 10:40:55.000000000 +0100
+++ ath5k-0.0/ath5k/base.c	2021-05-23 10:04:25.057755908 +0100
@@ -1536,12 +1536,12 @@ ath5k_set_current_imask(struct ath5k_hw
 }
 
 static void
-ath5k_tasklet_rx(struct tasklet_struct *t)
+ath5k_tasklet_rx(unsigned long data)
 {
 	struct ath5k_rx_status rs = {};
 	struct sk_buff *skb, *next_skb;
 	dma_addr_t next_skb_addr;
-	struct ath5k_hw *ah = from_tasklet(ah, t, rxtq);
+	struct ath5k_hw *ah = (void *)data;
 	struct ath_common *common = ath5k_hw_common(ah);
 	struct ath5k_buf *bf;
 	struct ath5k_desc *ds;
@@ -1784,10 +1784,10 @@ ath5k_tx_processq(struct ath5k_hw *ah, s
 }
 
 static void
-ath5k_tasklet_tx(struct tasklet_struct *t)
+ath5k_tasklet_tx(unsigned long data)
 {
 	int i;
-	struct ath5k_hw *ah = from_tasklet(ah, t, txtq);
+	struct ath5k_hw *ah = (void *)data;
 
 	for (i = 0; i < AR5K_NUM_TX_QUEUES; i++)
 		if (ah->txqs[i].setup && (ah->ah_txq_isr_txok_all & BIT(i)))
@@ -2176,9 +2176,9 @@ ath5k_beacon_config(struct ath5k_hw *ah)
 	spin_unlock_bh(&ah->block);
 }
 
-static void ath5k_tasklet_beacon(struct tasklet_struct *t)
+static void ath5k_tasklet_beacon(unsigned long data)
 {
-	struct ath5k_hw *ah = from_tasklet(ah, t, beacontq);
+	struct ath5k_hw *ah = (struct ath5k_hw *) data;
 
 	/*
 	 * Software beacon alert--time to send a beacon.
@@ -2447,9 +2447,9 @@ ath5k_calibrate_work(struct work_struct
 
 
 static void
-ath5k_tasklet_ani(struct tasklet_struct *t)
+ath5k_tasklet_ani(unsigned long data)
 {
-	struct ath5k_hw *ah = from_tasklet(ah, t, ani_tasklet);
+	struct ath5k_hw *ah = (void *)data;
 
 	ah->ah_cal_mask |= AR5K_CALIBRATION_ANI;
 	ath5k_ani_calibration(ah);
@@ -3069,10 +3069,10 @@ ath5k_init(struct ieee80211_hw *hw)
 		hw->queues = 1;
 	}
 
-	tasklet_setup(&ah->rxtq, ath5k_tasklet_rx);
-	tasklet_setup(&ah->txtq, ath5k_tasklet_tx);
-	tasklet_setup(&ah->beacontq, ath5k_tasklet_beacon);
-	tasklet_setup(&ah->ani_tasklet, ath5k_tasklet_ani);
+	tasklet_init(&ah->rxtq, ath5k_tasklet_rx, (unsigned long)ah);
+	tasklet_init(&ah->txtq, ath5k_tasklet_tx, (unsigned long)ah);
+	tasklet_init(&ah->beacontq, ath5k_tasklet_beacon, (unsigned long)ah);
+	tasklet_init(&ah->ani_tasklet, ath5k_tasklet_ani, (unsigned long)ah);
 
 	INIT_WORK(&ah->reset_work, ath5k_reset_work);
 	INIT_WORK(&ah->calib_work, ath5k_calibrate_work);
diff -Naurp ath5k-0.0.orig/ath5k/rfkill.c ath5k-0.0/ath5k/rfkill.c
--- ath5k-0.0.orig/ath5k/rfkill.c	2021-05-22 10:40:55.000000000 +0100
+++ ath5k-0.0/ath5k/rfkill.c	2021-05-23 10:06:06.955138668 +0100
@@ -73,9 +73,9 @@ ath5k_is_rfkill_set(struct ath5k_hw *ah)
 }
 
 static void
-ath5k_tasklet_rfkill_toggle(struct tasklet_struct *t)
+ath5k_tasklet_rfkill_toggle(unsigned long data)
 {
-	struct ath5k_hw *ah = from_tasklet(ah, t, rf_kill.toggleq);
+	struct ath5k_hw *ah = (void *)data;
 	bool blocked;
 
 	blocked = ath5k_is_rfkill_set(ah);
@@ -90,7 +90,8 @@ ath5k_rfkill_hw_start(struct ath5k_hw *a
 	ah->rf_kill.gpio = ah->ah_capabilities.cap_eeprom.ee_rfkill_pin;
 	ah->rf_kill.polarity = ah->ah_capabilities.cap_eeprom.ee_rfkill_pol;
 
-	tasklet_setup(&ah->rf_kill.toggleq, ath5k_tasklet_rfkill_toggle);
+	tasklet_init(&ah->rf_kill.toggleq, ath5k_tasklet_rfkill_toggle,
+		(unsigned long)ah);
 
 	ath5k_rfkill_disable(ah);
 
